/**
 * 
 */
$.fn.serializeObject = function()
{
    var o = {};
    var a = this.serializeArray();
    $.each(a, function() {
        if (o[this.name] !== undefined) {
            if (!o[this.name].push) {
                o[this.name] = [o[this.name]];
            }
            o[this.name].push(this.value || '');
        } else {
        	o[this.name] = this.value || '';
        }
    });
    return o;
};

function populateSelect(url, element, parameters){
	$.ajax({
	    url: url,
	    type:'GET',
	    dataType: 'json',
	    success: function( json ) {
			$.each(json, function(i, obj){
            	$(element).append($('<option>').text(obj.text).attr('value', obj.id));
	        });
	    }
	});
}

function populateForm(url, element, parameters){
    $('.ajax-loader').show();
    $.ajax({
        type: 'POST',
        url: url,
        dataType: 'json',
        timeout: 10000,

        success: function(data){
            if(data){
            	fillForm($(element), data);
            }
        },
        error: function(data, errorThrown){
            alert('request failed :'+errorThrown);
        },
        complete: function(){
              $('.ajax-loader').hide();
        }
  });
	
}

function fillForm(frm, data) {
	$.each(data, function(key, value){
		var $ctrl = $('[name='+key+']', frm);
		if($ctrl.is('textarea')){
			$ctrl.val(value);
		}
		if($ctrl.is('select')){
			$("option",$ctrl).each(function(){
				if (this.value==value) { this.selected=true; }
			});
		} else {
			switch($ctrl.attr("type")) {
				case "text" :  case "date" :  case "hidden":
					$ctrl.val(value);
					break;
				case "radio" : case "checkbox":
					$ctrl.each(function(){
						if($(this).attr('value') == value) {
							$(this).attr("checked",value);
						}
					});
					break;
			}
		}
	});
}
